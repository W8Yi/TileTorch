[tool.poetry]
name = "tiletorch"
version = "0.1.0"
description = "WSI tiling, dataset building, and training utilities for histopathology."
authors = [{ name = "W8Yi Q", email = "w8yi@outlook.com" }]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/W8Yi/TileTorch"
repository = "https://github.com/W8Yi/TileTorch"
keywords = ["WSI", "whole-slide-image", "histopathology", "tiling", "deep-learning"]
packages = [{ include = "tiletorch", from = "src" }]
# If you publish to PyPI later, keep the name lowercase and unique.

[tool.poetry.dependencies]
python = ">=3.12,<3.13"

# Core
numpy = "^2.0"
pandas = "^2.2"
pillow = "^10.4"
tqdm = "^4.66"
pyyaml = "^6.0"
rich = "^13.7"
loguru = "^0.7"
typer = { version = "^0.12", extras = ["all"] }

# Imaging / WSI
openslide-python = "^1.3"
opencv-python-headless = "^4.10"
pyvips = { version = "^2.2", optional = true }  # optional alternative backend

# ML / data
scikit-learn = "^1.5"
h5py = "^3.11"
matplotlib = "^3.9"

# PyTorch: leave optional so users pick the right CUDA/CPU wheel.
# Users will install torch/torchvision themselves (see README).
torch = { version = ">=2.3,<3.0", optional = true }
torchvision = { version = ">=0.18,<1.0", optional = true }

[tool.poetry.extras]
# Install with: `poetry install --with torch`
torch = ["torch", "torchvision"]
# Install with: `poetry install --with vips`
vips = ["pyvips"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.6"
black = "^24.8"
isort = "^5.13"
mypy = "^1.11"
pytest = "^8.3"
pytest-cov = "^5.0"
pre-commit = "^3.8"
ipykernel = "^6.29"
jupyterlab = "^4.2"
types-PyYAML = "^6.0"

[tool.poetry.scripts]
tiletorch = "tiletorch.cli:app"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# ---------- Tooling configs ----------
[tool.ruff]
line-length = 100
target-version = "py312"
select = ["E","F","I","N","UP","B","SIM","C4"]
ignore = ["E203","E266","E501","B905"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
warn_return_any = true
warn_unused_ignores = true
strict_optional = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q --maxfail=1 --disable-warnings"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src/tiletorch"]